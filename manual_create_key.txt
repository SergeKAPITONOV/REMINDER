Проверка наличия SSH-ключа
	1. $ cd ~ # перешли в домашнюю директорию

	2. $ ls -la .ssh/ # вывели список созданных ключей
	!!!Если папка пустая или её нет, всё в порядке.
		Если есть файлы с похожими названиями, SSH-ключи уже создавались:
		id_dsa.pub;
		id_ecdsa.pub;
		id_rsa.pub.
	Если вы не создавали эти файлы, удалите их все.

Генерируем ключ SSH
	1. $ ssh-keygen -t rsa -b 4096 -C "электронная почта, к которой привязан ваш аккаунт на GitHub"
	После ввода отобразится такое сообщение:
	mac OS
	> Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]
	Windows
	> Enter a file in which to save the key (C:\Users\<имя_пользователя>\.ssh\):[Press enter]

	2. Если хотите сохранить ключи в другом месте поменяйте директорию.
        Нажимет "Enter", в указанной, домашней директории появится пара ключей.

	3. Программа запросит кодовую фразу (англ. passphrase) для доступа к SSH-ключу. 
	Вы можете оставить поле пустым. Для этого нажмите Enter, 
	а затем ещё раз Enter для подтверждения.
	> Enter passphrase (empty for no passphrase): [Type a passphrase]
	> Enter same passphrase again: [Type passphrase again]

	4. Готово! Теперь осталось проверить, что ключи действительно сгенерировались. 
	Для этого вызовите эту команду.
	$ ls -a ~/.ssh
	На экране должны появиться два файла — один с расширением .pub, другой без расширения. 
	Файл в .pub — публичный, им можно делиться с веб-сайтами или коллегами. 
	Файл без расширения .pub — приватный. Ни в коем случае не передавайте его никому!
 
Привязываем ключ SSH к GitHub
	1. После выполнения команды ssh-keygen из предыдущего урока 
	в директории ~/.ssh будет создано два файла — id_ed25519 и id_ed25519.pub 
	(или id_rsa и id_rsa.pub — в зависимости от того, какой алгоритм вы использовали):
	id_ed25519/id_rsa — приватный ключ (файл без .pub в конце). 
	Ни в коем случае не копируйте его и не делитесь им.
	id_ed25519.pub/id_rsa.pub — публичный ключ (на это указывает расширение .pub).
	Скопируйте содержимое файла с публичным ключом в буфер обмена.
	macOS:
	# скопировать содержимое ключа в буфер обмена:
	$ pbcopy < ~/.ssh/id_rsa.pub
	# для ed25519:
	$ pbcopy < ~/.ssh/id_ed25519.pub
	В качестве альтернативы вы можете распечатать файл на экран с помощью cat ~/.ssh/id_rsa.pub 
	и скопировать его вручную.
	Windows:
	# скопировать содержимое ключа в буфер обмена:
	$ clip < ~/.ssh/id_rsa.pub
	# для ed25519:
	$ clip < ~/.ssh/id_ed25519.pub
	Если clip не сработает, выведите содержимое файла с помощью cat ~/.ssh/id_rsa.pub 
	или cat ~/.ssh/id_ed25519.pub и скопируйте вывод в буфер обмена из консоли.

	2. Перейдите на GitHub и выберите пункт Settings (англ. «настройки») в меню аккаунта.

	3. В меню слева нажмите на пункт SSH and GPG keys.

	4. В открывшейся вкладке выберите New SSH key (англ. «новый SSH-ключ»).

	5. В поле Title (англ. «заголовок») напишите название ключа. Например, Personal key (англ. «личный ключ»).

	6. В поле Key type (англ. «тип ключа») должно быть Authentication Key (англ. «ключ аутентификации»).

	7. В поле Key скопируйте ваш ключ из буфера обмена.
	
	8. Нажмите на кнопку Add SSH key (англ. «добавить SSH-ключ»).
	
	9. Проверьте правильность ключа с помощью следующей команды.
	$ ssh -T git@github.com.

Если это первый раз, когда вы используете Git, чтобы поделиться проектом на GitHub, 
появится похожее предупреждение:
"The authenticity of host 'github.com (140.82.121.4)' can't be established. 
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU. 
This key is not known by any other names. 
Are you sure you want to continue connecting (yes/no/[fingerprint])?"

Для подтверждения подлинности сервер генерирует и публикует ключи SHA256. 
Вы можете проверить ключи GitHub по этой ссылке. Если ключ в предупреждении совпадает с тем, 
что вы видите на сайте, значит, сервер является действительным. Введите yes, чтобы продолжить. 
Вы увидите приветствие на экране:
"i %ВАШ_АККАУНТ%! You've successfully authenticated, but GitHub does not provide shell access."	

Ура: теперь ваш ключ привязан к GitHub! Если вы установили кодовую фразу для SSH-ключа, 
её нужно будет вводить для работы с репозиторием.

	 
	

 